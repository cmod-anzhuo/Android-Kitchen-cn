############################################################################
#
# Copyright (c) 2010-2011 dsixda - dislam@rocketmail.com
#
# Android Kitchen is 100% free.  This script file is intended for personal
# and/or educational use only.  It may not be duplicated for monetary
# benefit or any other purpose without the permission of the developer.
#
############################################################################

#
# This script has two optional arguments:
# $1 = "for_build"
# $2 = 是/否 (忽略提示) - 依赖于目前的 $1 , 默认=是
#


if [ "$1" != "for_build" ]
then
  clear
  echo

  if [ -d WORKING_* ]
  then
    echo "已找到工作目录"
  else
    echo "未找到工作目录！"
    exit 1
  fi
fi

if [ `uname | grep CYGWIN` ]
then
  zipalign_file=zipalign.exe

elif [ `uname | grep Linux` ]
then
  zipalign_file=zipalign

elif [ `sw_vers | grep -o Mac` ]
then
  zipalign_file=zipalign.mac

else
  echo "错误：未检测到操作系统类型，无法执行 zipalign 优化"
  exit 1
fi


return_val=0

if [ "$1" == "for_build" ]
then

  if [ "$2" == "no" ]
  then
    echo
    echo -n "你是否想要通过执行 zipalign 来优化 APK 文件 (y/n)? (默认为: y): "
    read do_zipalign
  fi    

else
  clear

  echo
  echo "---------------------------------------------------------------"
  echo  
  echo "Zipalign 是这样的一个过程，它会对你工作目录中所有的*.apk"
  echo "文件进行优化，以便更好的利用内存。"
  echo
  echo "注意：zipalign 优化所有 *.apk 文件的选项也会在你打包ROM时"
  echo "提供，所以无需现在就执行 zipalign 优化。"
  echo 
  echo "---------------------------------------------------------------"
  echo

  echo -n "执行 zipalign 优化(y/n)？(默认为：y)： "
  read do_zipalign
fi


if [ "$do_zipalign" == "n" ]
then
  exit 0
fi


echo
cd WORKING_*

grep_cmd=`find . | grep .apk$ | sort -f`

name1=

for filename in $grep_cmd
do

  #
  # Handle spaces in file names
  #
  if [ "`echo $filename | grep .apk$`" == "" ]
  then

    if [ "$name1" == "" ]
    then
      name1=$filename
    else
      name1="$name1 $filename"
    fi

    continue

  elif [ "$name1" != "" ]
  then

    # Replace space with underscore temporarily
    name2=$filename
    original_name="$name1 $name2"
    filename=`echo $original_name | tr ' ' '_'`
    mv "$name1 $name2" $filename
    found_space=yes
    echo "正在为 $original_name 执行 zipalign 优化 ..."

  else
    found_space=no
    echo "正在为 $filename 执行 zipalign 优化..."
  fi

  new_file=$filename\_new
  ../tools/zipalign_files/$zipalign_file 4 $filename $new_file

  if [ -e $new_file ]
  then

    if [ "$found_space" == "yes" ]
    then
      mv -f $new_file "$name1 $name2"
      rm -f $filename

    else
      mv -f $new_file $filename 
    fi

  else

    return_val=1
    echo "错误：无法执行 zipalign 优化，操作中止"
    if [ `uname | grep Linux` ]
    then
      echo "如果你使用的是 64 位版本的 Linux 系统，请确定你已经安装了 ia32-libs"
    fi
    break
  fi

  name1=

done

cd ..
echo

if [ "$return_val" == "0" ]
then
  echo "完成 zipaligning"
fi

exit $return_val

