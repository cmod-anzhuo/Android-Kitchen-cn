############################################################################
#
# Copyright (c) 2010-2011 dsixda - dislam@rocketmail.com
#
# Android Kitchen is 100% free.  This script file is intended for personal
# and/or educational use only.  It may not be duplicated for monetary
# benefit or any other purpose without the permission of the developer.
#
############################################################################

#
# This script has two optional arguments:
#
# $1 = "kernel_only" - dont't modify any files after extraction 
#    = "name_given" - if this is used, then $2 is mandatory
# $2 = ROM name under original_update (specify only if $1 = "name_given")
#


if [ "$1" == "name_given" ]
then

  file_chosen=$2

  if [ "$file_chosen" == "" ]
  then
    echo "错误: 没有指定 ROM 的名字!"
    cd ..
    exit 0
  fi

  if [ ! -e original_update/$file_chosen ]
  then
    echo "错误: 没有找到 original_update/$file_chosen"
    exit 0
  fi
  
else

  cd original_update

  #
  # Check for any ZIP files in original_update
  #
  zip_cmd=`find . ! -name . -prune -type f | grep -i -m 1 \\.zip$`
 
  #
  # Check for any TAR files in original_update
  #
  tar_cmd=`find . ! -name . -prune -type f | grep -i -m 1 \\.tar$`

  #
  # Check for *.APP or *.app in original_update
  #
  app_cmd=`find . ! -name . -prune -type f | grep -i -m 1 \\.app$`

  #
  # Check for WORKING_* folder in original_update
  #
  wkg_cmd=`find . ! -name . -prune -type d | grep "WORKING_"`

  cd ..

  if [ "$zip_cmd" == "" ] && [ "$tar_cmd" == "" ] && [ "$app_cmd" == "" ] && [ "$wkg_cmd" == "" ]
  then

    #
    # Check for factoryfs.img (cache.img and zImage are optional)
    #  
    if [! -e original_update/factoryfs.img]
    then

      #
      # Check for system.img and boot.img in original_update  
      #

      # We'll prompt for a Null boot.img if no boot.img found
      if [ ! -e original_update/system.img ]
      then

        # No system.img found, check for boot.img

        if [ -e original_update/boot.img ]
        then
        echo "错误: 没有发现original_update/system.img"
        else
          echo
        echo "错误: 在original_update文件夹没有发现ROM!"
        fi

        exit 0
      fi
    fi

  fi


  grep_cmd=`scripts/grep_roms`

  count=0
  rm -f temp.list

  echo >> temp.list
  echo "可用 ROM:" >> temp.list
  echo >> temp.list

  for filename in $grep_cmd 
  do
    count=$(($count+1))

    filename=`echo $filename | sed 's/temp_space/ /g'`

    # Store file names in an array
    file_array[$count]=$filename

    if [ "$filename" == "system.img" ]
    then
      filename="system.img and boot.img"
    elif [ "$filename" == "factoryfs.img" ]
    then
      filename="factoryfs.img, cache.img and zImage"
    fi

    echo "  ($count) $filename" >> temp.list
  done

  more temp.list
  rm -f temp.list

  echo
  echo -n "输入文件编号 (默认 = 1，取消 = 0): "

  read enterNumber
  echo

  if [ "$enterNumber" == "0" ]
  then
    exit 0
  fi

  if [ "$enterNumber" == "" ]
  then
    enterNumber=1
  fi

  if [ "`echo $enterNumber | sed 's/[0-9]*//'`" == "" ] || [ "enterNumber"=="1" ]
  then
    file_chosen=${file_array[$enterNumber]}

    if [ "$file_chosen" == "" ]
    then
      exit 0
    fi
  else
    exit 0
  fi

fi


if [ "$file_chosen" == "system.img" ]
then
  scripts/img_files_to_working_folder create_working $1
  exit $?

elif [ "$file_chosen" == "factoryfs.img" ]
then
  scripts/simg_files_to_working_folder create_working $1
  exit $?

elif [ "`echo $file_chosen | grep -i \\.zip$`" != "" ] && [ ! -d "original_update/$file_chosen" ]
then
  scripts/zip_file_to_working_folder "$file_chosen" $1
  exit $?

elif [ "`echo $file_chosen | grep -i \\.tar$`" != "" ] && [ ! -d "original_update/$file_chosen" ]
then
  scripts/tar_file_to_working_folder "$file_chosen" $1
  exit $?

elif [ "`echo $file_chosen | grep -i \\.app$`" != "" ] && [ ! -d "original_update/$file_chosen" ]
then
  scripts/app_file_to_working_folder "$file_chosen" $1
  exit $?

elif [ "`echo $file_chosen | grep -m 1 \"^WORKING_\"`" != "" ]
then
  scripts/wkg_to_working_folder "$file_chosen" $1
  exit $?
fi 

