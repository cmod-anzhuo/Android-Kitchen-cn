############################################################################
#
# Copyright (c) 2010-2011 dsixda - dislam@rocketmail.com
#
# Android Kitchen is 100% free.  This script file is intended for personal
# and/or educational use only.  It may not be duplicated for monetary
# benefit or any other purpose without the permission of the developer.
#
############################################################################

clear

if [ -d WORKING_* ]
then

  cd WORKING_*
  
  if [ ! -e META-INF/com/google/android/update-script ]
  then
    echo "错误：未发现 update-script，无法继续"
    cd ..
    exit 0
  fi

  if [ ! -e system/build.prop ]
  then
    echo "错误：未发现 build.prop，无法继续"
    cd ..
    exit 0
  fi

  cd ..

else
  exit 0
fi


scripts/ensure_boot_extracted

if [ ! -d BOOT-EXTRACTED ] 
then
  echo "未找到BOOT-EXTRACTED文件夹 "
  exit 0
fi


clear
echo
echo -n "请稍等 "


#
# Check if Samsung Galaxy S2 or equivalent
#

echo -n "."
scripts/check_galaxy_s
is_galaxy_s=$?


#
# Check Android OS version
#

echo -n "."
android_os=`scripts/get_build_prop_val ro.build.version.release`



#
# Check Build Number
#

echo -n "."
cd WORKING_*
cd system

if [ `grep -c ro.product.version build.prop` == 0 ]
then
  id_var=ro.build.display.id
else
  id_var=ro.product.version
fi

cd ../..

rom_name=`scripts/get_build_prop_val $id_var`



#
# Check Device
#

echo -n "."
device_name=`scripts/get_device_name`


#
# Check Model
#

echo -n "."
model=`scripts/get_product_model`



#
# Check root
#

echo -n "."
cd WORKING_*

if [ "`find . -name su`" == "" ] 
then
  su_status=NO
elif [ "`find . -iname Superuser.apk`" == "" ]
then
  su_status=NO
else
  su_status=YES
fi

cd ..

if [ -e BOOT-EXTRACTED/boot.img-ramdisk/default.prop ]
then
  cd BOOT-EXTRACTED/boot.img-ramdisk
else
  echo "错误：未找到 BOOT-EXTRACTED/boot.img-ramdisk/default.prop！"
  rm -rf BOOT-EXTRACTED
  exit 0
fi

grep_root=`grep -m 1 ro.secure default.prop`

if [ "$grep_root" == "ro.secure=1" ] 
then
  unsecure_status="无"
elif [ "$grep_root" == "ro.secure=0" ]
then
  unsecure_status="有"
else
  unsecure_status="未知"
fi

cd ../..



#
# Check busybox
#

echo -n "."
cd WORKING_*

if [ "`find . -name busybox`" == "" ] 
then
  bb_status="无"
else
  bb_status="有"
fi

cd ..



#
# Check apps2sd
#

echo -n "."
scripts/a2sd_exists

if [ "$?" == "1" ]
then
  apps2sd_status="是"
else
  apps2sd_status="否"
fi



#
# Check wireless tethering
#

echo -n "."
scripts/pre_froyo_check
is_old=$?

if [ "$is_old" == "1" ] 
then

  cd WORKING_*

  tether_list=( wireless_tether* android.tether* )

  if [ "$su_status" == "有" ] 
  then
    tether_status="无*"
  else
    tether_status="无"
  fi

  for find_tether in ${tether_list[@]}
  do
    
    res=`find . -name $find_tether`
    if [ "$res" != "" ]
    then
      tether_status="有"
      break
    fi

  done
  cd ..
fi


#
# Check /data/app
#

echo -n "."
scripts/data_app_exists

if [ "$?" == "1" ]
then
  data_app_status=有
else
  data_app_status=无
fi


#
# Check /data/local
#

echo -n "."
cd WORKING_*
cd META-INF/com/google/android
grep_data_local=`grep -c "0771 DATA:local" update-script`

if [ "$grep_data_local" == "1" ]
then
  custom_anim_status=有
else
  custom_anim_status=无
fi

cd ../../../../..


#
# Check if ROM contains Nano
#

echo -n "."
cd WORKING_*

if [ "`find . -name nano`" == "" ] 
then
  nano_status=无
else
  nano_status=有
fi

cd ..



#
# Check if ROM contains Bash
#

echo -n "."
cd WORKING_*

if [ "`find . -name bash`" == "" ]
then
  bash_status=无
else
  bash_status=有
fi

cd ..




if [ "$is_galaxy_s" == "1" ]
then

  #
  # Check if ROM contains modem.bin
  #

  echo -n "."
  cd WORKING_*

  if [ -e modem.bin ]
  then
    modem_status=YES
  else
    modem_status=NO
  fi

  #
  # Check for CSC version
  #

  if [ -e system/CSCVersion.txt ]
  then
    csc_version=`more system/CSCVersion.txt | sed 's/[ ]*$//g'`
  else
    csc_version=UNKNOWN
  fi

  cd ..

else

  #
  # Check if ROM contains radio.img
  #

  echo -n "."
  cd WORKING_*

  if [ -e radio.img ]
  then
    radio_status=有
  else
    radio_status=无
  fi

  cd ..

fi




#
# Check if ROM is deodexed
#

echo -n "."
cd WORKING_*

if [ ! -d system/framework ]
then
  deodex_fr_status="没有文件夹"
else
  if [ "`find system/framework -name *.odex`" == "" ]
  then
    deodex_fr_status="是"
  else
    deodex_fr_status="否"
  fi
fi

if [ ! -d system/app ]
then
  deodex_app_status="NO FOLDER"
else
  if [ "`find system/app -name *.odex`" == "" ]
  then
    deodex_app_status="是"
  else
    deodex_app_status="否"
  fi
fi

cd ..




#
# Check if ROM does a wipe
#

echo -n "."
cd WORKING_*

cd META-INF/com/google/android
grep_wipe=`grep -c "format .*DATA:" update-script`
  
if [ "$grep_wipe" == "0" ]
then
  wipe_status="否"  
else
  wipe_status="是"
fi

cd ../../../../..


#
# Check for BusyBox run-parts method
#

echo -n "."

if [ "$is_galaxy_s" == "1" ]
then
  
  cd WORKING_*
  test_initd=`grep -c "set_perm.*SYSTEM:etc/init.d" META-INF/com/google/android/update-script`
  cd ..

  if [ $test_initd == 0 ]
  then
    runparts_status=NO
  else
    runparts_status=YES
  fi

else

  cd BOOT-EXTRACTED/boot.img-ramdisk

  test_start=`grep -c "start sysinit" init.rc`
  test_service=`grep -c "service sysinit" init.rc`

  if [[ "$test_start" == "0" || "$test_service" == "0" ]] 
  then
    runparts_status=否
  else
    runparts_status=是
  fi

  cd ../..
fi




clear

echo
echo "工作目录信息"
echo
echo " Android 系统版本                : $android_os"
echo " 设备                            : $device_name"
echo " 型号                            : $model"
echo " ROM 名字                        : $rom_name"

if [ "$is_galaxy_s" == "1" ]
then
  echo " CSC 版本                   : $csc_version"
fi

echo " Root权限 (Superuser.apk + su)   : $su_status"

if [ "$is_galaxy_s" == "0" ]
then
  echo " Root权限 (解锁的 boot.img)      : $unsecure_status"
fi

echo " 已安装BusyBox                   : $bb_status"
echo " BusyBox run-parts 支持          : $runparts_status"
echo " 启用了Apps2SD(app2ext)          : $apps2sd_status" 

if [ "$is_old" == "1" ]; then
echo " WiFi共享已安装                   : $tether_status"
fi

echo " 支持 /data/app                   : $data_app_status"
echo " 允许自定义开机画面               : $custom_anim_status"                                                         
echo " Nano 文本编辑器已安装            : $nano_status"
echo " Bash命令解释器支持               : $bash_status"
echo " /system/framework 已经 deodex    : $deodex_fr_status"
echo " /system/app 已经 deodex          : $deodex_app_status"

if [ "$is_galaxy_s" == "1" ]
then
  echo " 发现modem.bin                : $modem_status"
else
  echo " 发现radio.img                    : $radio_status"
fi

echo " ROM 会清空数据分区               : $wipe_status"
echo

if [ "$is_old" == "1" ]
then
  if [ "$tether_status" == "否*" ]
  then
    echo -n " * - 否 "
    
    for find_tether in ${tether_list[@]}
    do
      echo -n "$find_tether " 
    done

    echo
  fi 
fi

rm -rf BOOT-EXTRACTED


